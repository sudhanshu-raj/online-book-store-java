/*These are all tables and procedures which is required in this project,before running this script please check if same table or procedure exists in your database or not.
If it's already present then dropped it and run this script.
*/
--USER_CREDENTIALS TABLE
CREATE TABLE USER_CREDENTIALS (
  ID NUMBER GENERATED ALWAYS AS IDENTITY,
  USERNAME VARCHAR2(100) NOT NULL,
  EMAIL VARCHAR2(100) NOT NULL,
  PASSWORD VARCHAR2(100) NOT NULL,
  PHONE_NUMBER VARCHAR2(20),
  CONSTRAINT USER_PRIMARY PRIMARY KEY (USERNAME),
  CONSTRAINT UNIQUE_PHONE UNIQUE (PHONE_NUMBER)
);

--products table
create table products(
id int primary key,
name varchar(50) not null,
quantity int not null,
price number(10,2) not null,
category varchar(50) not null,
author varchar(50) not null);

insert into products values(21,'Think ' ||chr(38)|| ' grow rich',5,199,'non-fiction','napoleon hill');
insert into products values(22,'Shrimad Bhagwat Geeta',25,299,'Hindu religious book','Maharishi Veda Vyasa');
insert into products values(23,'Tuesday With Morrie',21,232,'Biographical','Mitch Albom');

--user_cart table 
CREATE TABLE USER_CART (
  CART_ID NUMBER GENERATED ALWAYS AS IDENTITY,
  USERNAME VARCHAR2(50) NOT NULL,
  PRODUCT_ID NUMBER NOT NULL,
  CART_QUANTITY NUMBER NOT NULL,
  PRIMARY KEY (CART_ID),
  CONSTRAINT FK_USERNAME FOREIGN KEY (USERNAME) REFERENCES USER_CREDENTIALS (USERNAME),
  CONSTRAINT FK_PRODUCT_ID FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (ID)
);

--orders table 
CREATE TABLE ORDERS (
  ORDER_ID NUMBER GENERATED ALWAYS AS IDENTITY,
  USERNAME VARCHAR2(50) NOT NULL,
  PRODUCT_ID NUMBER NOT NULL,
  QUANTITY NUMBER NOT NULL,
  PRICE NUMBER(10,2) NOT NULL,
  ORDER_DATE DATE DEFAULT SYSDATE,
  PAYMENT_MODE VARCHAR2(20),
  PRIMARY KEY (ORDER_ID),
  CONSTRAINT FK_ORD_USERNAME FOREIGN KEY (USERNAME) REFERENCES USER_CREDENTIALS (USERNAME),
  CONSTRAINT FK_ORD_PID FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (ID)
);

--shipping 
 create table shipping(
shipping_id int  GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
fullName varchar(100) not null,
contactNumber varchar(50) not null,
address varchar(200) not null,
country varchar(100) not null,
zipcode varchar(20) not null,
city varchar(100) not null,
c_state varchar(100) not null);


---procedure insert_ordersp
create or replace NONEDITIONABLE PROCEDURE insert_ordersP(
d_username  varchar,
d_product_id int,
d_quantity int,
d_price float,
d_payment_mode varchar,
d_order_id out int)
AS
begin
insert into orders(username,product_id,quantity,price,payment_mode) values(d_username,d_product_id,d_quantity,d_price,d_payment_mode)
  RETURNING order_id INTO d_order_id;

commit;
end;
/
